#include <iostream>
#include <ctime>

int main() {
    std::string name;
    int birthYear, birthMonth, birthDay;
    int currentYear, currentMonth, currentDay;

    std::cout << "Enter your name: ";
    std::getline(std::cin, name);

    std::cout << "Enter your birth year: ";
    std::cin >> birthYear;
    std::cout << "Enter your birth month: ";
    std::cin >> birthMonth;
    std::cout << "Enter your birth day: ";
    std::cin >> birthDay;

    std::time_t t = std::time(0);
    std::tm* now = std::localtime(&t);
    currentYear = now->tm_year + 1900;
    currentMonth = now->tm_mon + 1;
    currentDay = now->tm_mday;

    int age = currentYear - birthYear;
    if (currentMonth < birthMonth || (currentMonth == birthMonth && currentDay < birthDay)) {
        age--;
    }

    std::cout << "Name: " << name << std::endl;
    std::cout << "Age: " << age << std::endl;

    return 0;
}


# Program 2: Check if a given year is a leap year

#include <iostream>

bool isLeapYear(int year) {
    return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
}

int main() {
    int year;
    std::cout << "Enter a year: ";
    std::cin >> year;

    if (isLeapYear(year)) {
        std::cout << year << " is a leap year." << std::endl;
    } else {
        std::cout << year << " is not a leap year." << std::endl;
    }

    return 0;
}


# Program 3: Determine the largest of three numbers

#include <iostream>
#include <algorithm>

int main() {
    double num1, num2, num3;
    std::cout << "Enter three numbers: ";
    std::cin >> num1 >> num2 >> num3;

    double largest = std::max({num1, num2, num3});
    std::cout << "The largest number is: " << largest << std::endl;

    return 0;
}


# Program 4: Perform arithmetic operations

#include <iostream>

double performOperation(double num1, double num2, char op) {
    switch (op) {
        case '+':
            return num1 + num2;
        case '-':
            return num1 - num2;
        case '*':
            return num1 * num2;
        case '/':
            if (num2 != 0) {
                return num1 / num2;
            } else {
                throw std::runtime_error("Division by zero");
            }
        default:
            throw std::runtime_error("Invalid operator");
    }
}

int main() {
    double num1, num2;
    char op;
    std::cout << "Enter two numbers and an operator (+, -, *, /): ";
    std::cin >> num1 >> op >> num2;

    try {
        double result = performOperation(num1, num2, op);
        std::cout << "Result: " << result << std::endl;
    } catch (const std::exception& e) {
        std::cerr << "Error: " << e.what() << std::endl;
    }

    return 0;
}


# Program 5: Calculate average of four quarter grades using for loop with input validation
```
#include <iostream>

int main() {
    double grades[4];
    double sum = 0.0;

    for (int i = 0; i < 4; i++) {
        while (true) {
            std::cout << "Enter grade for quarter " << i + 1 << ": ";
            std::cin >> grades[i];

            if (grades[i] >= 0.0 && grades[i] <= 100.0) {
                break;
            } else {
                std::cout << "Invalid grade. Please enter a value between 0 and 100." << std::endl;
            }
        }

        sum += grades[i];
    }

    double average = sum / 4.0;
    std::cout << "Average grade: " << average << std::endl;

    return 0;
}
